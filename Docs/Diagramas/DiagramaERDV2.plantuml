@startuml
!theme plain

entity "users" {
  * id: integer
  --
  * name: varchar(100)
  * last_name: varchar(100)
  * username: varchar(50)
  * password_hash: varchar(255)
  * email: varchar(150)
  * birth_date: date
  * phone: varchar(20)
  * created_at: datetime
  * is_verified: boolean
  * last_login: datetime
  * verification_token: varchar(100)
  * reset_token: varchar(100)
  * reset_token_expires: datetime
}

entity "artists" {
  * id: integer
  --
  * stage_name: varchar(100)
  * is_band: boolean
  * biography: text
  * profile_image: varchar(255)
  * cover_image: varchar(255)
  * formed_date: date
}

entity "albums" {
  * id: integer
  --
  * name: varchar(150)
  * release_date: date
  * cover_image: varchar(255)
  * artist_id: integer
}

entity "songs" {
  * id: integer
  --
  * name: varchar(150)
  * duration: integer
  * file_url: varchar(255)
  * cover_image: varchar(255)
  * release_date: date
  * album_id: integer
}

entity "genres" {
  * id: integer
  --
  * name: varchar(50)
  * description: text
}

entity "song_genre" {
  * id: integer
  --
  * song_id: integer
  * genre_id: integer
}

entity "song_artist" {
  * id: integer
  --
  * song_id: integer
  * artist_id: integer
}

entity "user_song" {
  * id: integer
  --
  * user_id: integer
  * song_id: integer
  * play_count: integer
  * last_played: datetime
  * favorite: boolean
  * liked_at: datetime
}

entity "playlists" {
  * id: integer
  --
  * user_id: integer
  * name: varchar(100)
  * description: text
  * cover_image: varchar(255)
  * is_public: boolean
  * created_at: datetime
}

entity "playlist_song" {
  * id: integer
  --
  * playlist_id: integer
  * song_id: integer
  * added_at: datetime
  * order: integer
}

entity "reviews" {
  * id: integer
  --
  * user_id: integer
  * song_id: integer
  * rating: integer
  * comment: text
  * created_at: datetime
}

entity "follows" {
  * id: integer
  --
  * follower_id: integer
  * followed_id: integer
  * followed_type: varchar(20)
  * created_at: datetime
}

' Relaciones
users ||--o{ user_song
songs ||--o{ user_song

artists ||--o{ albums
albums ||--o{ songs

songs ||--o{ song_artist
artists ||--o{ song_artist

users ||--o{ playlists
playlists ||--o{ playlist_song
songs ||--o{ playlist_song

genres ||--o{ song_genre
songs ||--o{ song_genre

users ||--o{ reviews
songs ||--o{ reviews

' Relaciones CORREGIDAS para follows
users ||--o{ follows : "follower"
users ||--o{ follows : "followed"

' Notas
note right of artists
  stage_name permite artistas solistas o bandas.
  is_band = true para grupos, false para solistas.
  formed_date: fecha de formación de la banda
end note

note right of song_artist
  Relación N:M entre canciones y artistas
  (para colaboraciones, feats, etc.)
end note

note right of playlists
  Cada usuario puede tener varias playlists.

  - is_public: true para playlists públicas
  false para playlists privadas
end note

note right of user_song
  Historial de reproducción y "me gusta"
  para cada usuario en cada canción.
end note

note right of follows
  followed_type: 'artist' o 'user'
  Permite seguir tanto artistas como otros usuarios
end note

@enduml
